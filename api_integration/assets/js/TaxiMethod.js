/**
 * Запрос на на клиент
 * @param {string} name - можно передать имя метода - 'getCarInfo'
 * @returns {TaxiMethod}
 */
TaxiMethod = function(name) {
    var self = {};
    /**
     * Название комаднды запроса
     */
    self.name = name;
    /**
     * ТаймАут
     */
    self.timeout = 75000;
    /**
     * Флаг асинхронного выполнения AJAX - использовать осторожно!
     */
    self.async = true;
    /**
     * Параметры запроса
     */
    self.params = {};
    
    /**
     * Кол-во всего попыток отправки запроса на сервер, прежде, чем запрос будет считаться проваленым
     */
    self.tryCount = 2;
    
    /**
     * Пауза после неудачной попытки запроса
     */
    self.tryPause = 10000;
    
    /**
     * Функция успешной обработки ответа с сервера,
     * надо учесть, что например, если на запрос "changeOrderStatus" пришел
     * ответ false - то выполнен все же будет этот метод, проверку
     * успешность запроса необходимо реализовать отдельно
     * @returns {undefined}
     */
    self.successCallback = function() {
        console.log('Необходимо задать дейтсвие при успешном выполнении запроса');
    };
    /**
     * Функция обработки плохого ответа, когда наш сервер не ответил \
     * вернул результат с ошибокой (например, что неверная подпись запроса)
     * @returns {undefined}
     */
    self.errorCallback = function() {
        self.displayLoadingInfo(self.messages.errors.onOrderInfoFail);
        console.log('Необходимо задать дейтсвие при не сбое выполнения запроса');
    };
    return self;
};